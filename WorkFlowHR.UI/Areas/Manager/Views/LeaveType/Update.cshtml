@model WorkFlowHR.UI.Areas.Manager.Models.LeaveTypeVMs.LeaveTypeEditVM

@{
    ViewData["Title"] = "Update";
}

<!-- Neo-styled modal body -->
<div class="neo-form-card">
    <div class="neo-form-header">
        <div class="neo-dot"></div>
        <div class="neo-dot"></div>
        <div class="neo-dot"></div>
        <span>Update Leave Type</span>
    </div>

    <form id="leaveTypeUpdateForm" asp-action="Update" method="post" class="neo-form">
        @Html.AntiForgeryToken()

        <!-- Hidden Id for update -->
        <input asp-for="Id" type="hidden" />

        <div asp-validation-summary="ModelOnly" class="text-danger small mb-3"></div>

        <div class="mb-3">
            <label asp-for="Name" class="form-label neo-label">Type</label>
            <input asp-for="Name" class="form-control neo-input" required />
            <span asp-validation-for="Name" class="text-danger small"></span>
        </div>

        <div class="mb-4">
            <label asp-for="Description" class="form-label neo-label">Description</label>
            <textarea asp-for="Description" class="form-control neo-input" rows="3" required></textarea>
            <span asp-validation-for="Description" class="text-danger small"></span>
        </div>

        <div class="d-grid">
            <button type="submit" class="btn neo-btn-gradient">Save</button>
        </div>
    </form>

    <div class="text-center mt-3">
        <a asp-action="Index" class="btn neo-btn-secondary">Back to List</a>
    </div>
</div>

@section Scripts {
    @@await Html.RenderPartialAsync("_ValidationScriptsPartial")
    <script>
        (function () {
            const $form = $('#leaveTypeUpdateForm');
            if (!$form.length || $form.data('bound')) return;
            $form.data('bound', true);

            // If jQuery Validate is present, use it
            if ($.fn && $.fn.validate) {
                $form.validate({
                    errorClass: 'text-danger',
                    validClass: 'text-success',
                    errorPlacement: function (error, element) { error.insertAfter(element); },
                    messages: {
                        Name: "Lütfen bu alanı doldurun.",
                        Description: "Lütfen bu alanı doldurun."
                    },
                    submitHandler: function (form) {
                        return submitLeaveType(form);
                    }
                });
            }

            // Fallback submit (in case validate isn't loaded)
            $form.on('submit', function (e) {
                if ($.fn && $.fn.validate) return; // validate will handle it
                e.preventDefault();
                submitLeaveType(this);
            });

            function submitLeaveType(form) {
                $.ajax({
                    type: $(form).attr('method'),
                    url: $(form).attr('action'),
                    data: $(form).serialize(),
                    success: function (response) {
                        if (response && response.success) {
                            window.location.href = response.redirectUrl;
                        } else if (response && response.errors) {
                            $.each(response.errors, function (key, value) {
                                var $err = $('[name="' + key + '"]').next('.text-danger');
                                $err.text(value);
                            });
                        } else {
                            // If a full view returned, just reload
                            location.reload();
                        }
                    },
                    error: function () {
                        alert("An unexpected error occurred.");
                    }
                });
                return false;
            }
        })();
    </script>
}

<style>
    /* Card container */
    .neo-form-card {
        background: rgba(255,255,255,.9);
        border: 1px solid rgba(2,6,23,.08);
        border-radius: 16px;
        box-shadow: 0 12px 30px rgba(2,6,23,.12);
        padding: 18px 16px 22px 16px;
    }

    /* Header bar */
    .neo-form-header {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 10px;
        padding: 10px 12px;
        border-radius: 12px;
        background: linear-gradient(90deg, rgba(124,58,237,.10), rgba(6,182,212,.10));
        border: 1px solid rgba(2,6,23,.06);
        font-weight: 700;
        color: #0f172a;
    }

    .neo-dot {
        width: 10px;
        height: 10px;
        border-radius: 999px;
        background: #7c3aed;
        box-shadow: 0 0 0 3px rgba(124,58,237,.15) inset;
    }

    /* Labels & inputs */
    .neo-label {
        font-weight: 600;
        color: #0f172a;
    }

    .neo-input {
        border-radius: 12px;
        border: 1px solid rgba(2,6,23,.15);
        background: rgba(255,255,255,.9);
        transition: box-shadow .2s ease, border-color .2s ease, transform .08s ease;
    }

        .neo-input:focus {
            border-color: #7c3aed;
            box-shadow: 0 0 0 .2rem rgba(124,58,237,.15);
            transform: translateY(-1px);
        }

    /* Buttons */
    .neo-btn-gradient {
        background: linear-gradient(90deg,#06b6d4,#22d3ee);
        color: #fff !important;
        border: none;
        border-radius: 999px;
        font-weight: 600;
        letter-spacing: .2px;
        padding: 10px 18px;
        box-shadow: 0 10px 20px rgba(2,6,23,.18);
        transition: transform .15s ease, box-shadow .15s ease;
    }

        .neo-btn-gradient:hover {
            transform: translateY(-1px);
            box-shadow: 0 14px 28px rgba(2,6,23,.20);
        }

    .neo-btn-secondary {
        background: rgba(2,6,23,.06);
        color: #0f172a !important;
        border: none;
        border-radius: 999px;
        font-weight: 600;
        padding: 8px 16px;
        transition: background .15s ease, transform .1s ease;
    }

        .neo-btn-secondary:hover {
            background: rgba(2,6,23,.10);
            transform: translateY(-1px);
        }

    .text-danger.small {
        font-size: .85rem;
    }
</style>
