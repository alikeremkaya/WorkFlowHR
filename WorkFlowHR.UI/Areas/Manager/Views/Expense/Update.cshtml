@model WorkFlowHR.UI.Areas.Manager.Models.ExpenseVMs.ExpenseUpdateVM

@{
    Layout = null;
}

<form id="expenseUpdateForm" asp-action="Update" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input asp-for="Id" type="hidden" />

    <h2 class="form-title">Update Expense Request</h2>
    <p class="form-subtitle">Update the details for the expense request belonging to <strong>@Model.AppUserDisplayName</strong>.</p>

    <div asp-validation-summary="ModelOnly" class="alert alert-danger mb-3"></div>

    <div class="form-group">
        <label class="form-label">Employee</label>
        <input type="text" class="form-control" value="@Model.AppUserDisplayName" readonly disabled />
    </div>

    <div class="form-group">
        <label asp-for="Amount" class="form-label">Amount (₺)</label>
        <input asp-for="Amount" type="number" step="0.01" min="0.01" class="form-control" required />
        <span asp-validation-for="Amount" class="text-danger small-text"></span>
    </div>

    <div class="form-group">
        <label asp-for="ExpenseDate" class="form-label">Expense Date</label>
        <input asp-for="ExpenseDate" type="date" class="form-control" required />
        <span asp-validation-for="ExpenseDate" class="text-danger small-text"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="form-label">Description</label>
        <textarea asp-for="Description" class="form-control" rows="3" required></textarea>
        <span asp-validation-for="Description" class="text-danger small-text"></span>
    </div>

    <div class="form-group">
        <label class="form-label">Receipt / Invoice</label>
        @if (Model.ExistingImage != null && Model.ExistingImage.Length > 0)
        {
            <div class="mb-2">
                <span class="small-text text-muted d-block mb-1">Current Receipt:</span>
                <img src="data:image/png;base64,@(Convert.ToBase64String(Model.ExistingImage))" alt="current receipt" style="width:80px; height:80px; object-fit:cover; border-radius:var(--radius-sm); border:1px solid var(--border-color);" />
            </div>
        }
        <input asp-for="NewImage" type="file" accept="image/png, image/jpeg" class="form-control" />
        <small class="text-muted">To replace, please select a new image.</small>

        <div class="d-flex align-items-center gap-3 mt-2">
            <img id="expenseNewImgPreview" alt="New Receipt Preview" style="display:none; width:80px; height:80px; object-fit:cover; border-radius:var(--radius-sm); border:1px solid var(--border-color);" />
            <div id="expenseNewFileName" class="text-muted small-text"></div>
        </div>
        <span asp-validation-for="NewImage" class="text-danger small-text"></span>
    </div>

    <div class="form-actions">
        <button type="button" class="btn btn-secondary-custom" onclick="closeModal('createModal')">Cancel</button>
        <button type="submit" class="btn btn-primary-custom">Save Changes</button>
    </div>
</form>

<script>
    (function () {
        const $form = $('#expenseUpdateForm');
        if ($form.data('initialized')) return;
        $form.data('initialized', true);

        $form.on('submit', function (e) {
            e.preventDefault();
            const form = this;
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const $submitButton = $(form).find('button[type="submit"]');
            $submitButton.prop('disabled', true).text('Saving...');

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Update", "Expense", new { area = "Manager" })',
                data: new FormData(form),
                contentType: false,
                processData: false,
                headers: { 'RequestVerificationToken': getRequestVerificationToken() },
                success: function () {
                    swal("Success!", "The expense request has been updated.", "success")
                        .then(() => location.reload());
                },
                error: function (xhr) {
                    $submitButton.prop('disabled', false).text('Save Changes');
                    let msg = "An unexpected error occurred.";
                    if (xhr.responseJSON && xhr.responseJSON.errors) {
                        msg = Object.values(xhr.responseJSON.errors).join("\n");
                    }
                    swal("Error!", msg, "error");
                }
            });
        });

        $form.on('change', 'input[type="file"][name="NewImage"]', function () {
            const file = this.files[0];
            const $preview = $('#expenseNewImgPreview');
            const $fileName = $('#expenseNewFileName');
            if (!file) {
                $preview.hide().attr('src', '');
                $fileName.text('');
                return;
            }
            $fileName.text(file.name + ' (' + (file.size / 1024).toFixed(1) + ' KB)');
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = e => $preview.attr('src', e.target.result).show();
                reader.readAsDataURL(file);
            } else {
                $preview.hide();
            }
        });
    })();
</script>

<style>
    .form-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-color);
        margin-bottom: 0.5rem;
    }

    .form-subtitle {
        font-size: 1rem;
        color: var(--secondary-color);
        margin-top: 0;
        margin-bottom: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.25rem;
    }

    .form-label {
        display: block;
        font-weight: 500;
        color: var(--text-color);
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
    }

    .form-control:disabled {
        background-color: #e9ecef;
        opacity: 1;
    }

    .form-control {
        display: block;
        width: 100%;
        padding: 0.65rem 0.9rem;
        font-size: 1rem;
        line-height: 1.5;
        color: var(--text-color);
        background-color: var(--bg-white);
        border: 1px solid var(--border-color);
        appearance: none;
        border-radius: var(--radius-sm);
        transition: all .15s ease-in-out;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            outline: 0;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, .25);
        }

    textarea.form-control {
        min-height: 80px;
    }

    .small-text {
        font-size: 0.875em;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--border-color);
    }

    .btn-secondary-custom {
        background-color: #f8f9fa;
        color: #212529;
        font-weight: 500;
        border: 1px solid #dee2e6;
        border-radius: var(--radius-sm);
        padding: 10px 20px;
        text-decoration: none;
        transition: all .15s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

        .btn-secondary-custom:hover {
            background-color: #e9ecef;
            border-color: #ced4da;
        }

    .alert-danger {
        color: #842029;
        background-color: #f8d7da;
        border-color: #f5c2c7;
        padding: 1rem;
        border: 1px solid transparent;
        border-radius: var(--radius-sm);
    }
</style>