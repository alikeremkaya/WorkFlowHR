@model IEnumerable<WorkFlowHR.UI.Areas.Manager.Models.ExpenseVMs.ExpenseListVM>

@{
    ViewData["Title"] = "Expenses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- DataTables CSS ve JS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.2.3/js/bootstrap.min.js"></script>

<br />
<br />

<!-- Neo header -->
<div class="neo-page-header">
    <h1 class="neo-page-title">Expenses</h1>
    <a href="javascript:void(0);" class="btn neo-btn-gradient btn-create" onclick="openCreateModal()">Add</a>
</div>

<!-- Kart içinde tablo -->
<div class="neo-card table-responsive">
    <table id="expensesTable" class="table table-hover display nowrap neo-table" style="width:100%">
        <thead>
            <tr>
                <th>Image</th>
                <th>Employee</th>
                <th>Description</th>
                <th>Amount</th>
                <th>Roles</th>
                <th>Expense Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <div class="image-container">
                            @if (item.Image is null)
                            {
                                <p class="image-placeholder">No image. Please add.</p>
                            }
                            else
                            {
                                <img class="image-preview" src="@($"data:image/png;base64,{Convert.ToBase64String(item.Image)}")" onclick="openModal(this.src)" />
                            }
                        </div>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.AppUserDisplayName)</td>
                    <td>
                        <span class="description-tooltip" data-toggle="tooltip" title="@item.Description">
                            @(item.Description != null && item.Description.Length > 30 ? item.Description.Substring(0, 30) + "..." : item.Description)
                        </span>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Amount)</td>
                    <td>@Html.DisplayFor(modelItem => item.Roles)</td>
                    <td>@Html.DisplayFor(modelItem => item.ExpenseDate)</td>
                    <td>
                        <div class="dropdown table-dropdown">
                            <button class="btn btn-secondary dropdown-toggle table-dropdown-toggle" type="button" id="dropdownMenuButton@item.Id" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="caret"></span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right table-dropdown-menu" aria-labelledby="dropdownMenuButton@item.Id">
                                <a class="dropdown-item dropdown-item-update" href="javascript:void(0);" onclick="openUpdateModal('@item.Id')">Update</a>
                                <button class="dropdown-item dropdown-item-delete" data-id="@item.Id">Delete</button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Create Modal -->
<div id="createModal" class="modal">
    <div class="modal-content" onclick="event.stopPropagation()">
        <span class="modal-close" onclick="closeModal('createModal')">&times;</span>
        <div id="createModalContent"></div>
    </div>
</div>

<!-- Update Modal -->
<div id="updateModal" class="modal">
    <div class="modal-content" onclick="event.stopPropagation()">
        <span class="modal-close" onclick="closeModal('updateModal')">&times;</span>
        <div id="updateModalContent"></div>
    </div>
</div>

<!-- Image Modal -->
<div id="imageModal" class="modal">
    <div class="modal-content" onclick="event.stopPropagation()">
        <span class="modal-close" onclick="closeModal('imageModal')">&times;</span>
        <img id="modal-image">
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#expensesTable').DataTable({
                "paging": true,
                "ordering": true,
                "info": true,
                "searching": true,
                language: {
                    lengthMenu: "Göster _MENU_ kayıt",
                    search: "Ara:",
                    paginate: {
                        next: "İleri",
                        previous: "Geri"
                    },
                    "info": "_START_ - _END_ arası gösteriliyor (toplam _TOTAL_ kayıt)",
                    "infoEmpty": "Tabloda veri yok",
                    "emptyTable": "Tabloda veri yok",
                }
            });

            // Tooltip (Bootstrap 4 tarzı init; mevcut akış korunuyor)
            $('[data-toggle="tooltip"]').tooltip();
        });

        $('.dropdown-item-delete').click(function () {
            var id = $(this).data('id');
            swal({
                title: "Silme Onayı",
                text: "Bu kaydı silmek istediğinize emin misiniz?",
                icon: "warning",
                buttons: {
                    cancel: {
                        text: "Hayır",
                        visible: true,
                        className: "btn btn-secondary",
                        closeModal: true
                    },
                    confirm: {
                        text: "Evet",
                        className: "btn btn-danger",
                        closeModal: false
                    }
                }
            }).then((isConfirm) => {
                if (isConfirm) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Expense", new { area = "Manager" })',
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            swal({
                                title: "Silindi",
                                text: "Kayıt başarıyla silindi.",
                                icon: "success"
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function () {
                            swal("Hata", "Silme işlemi başarısız oldu.", "error");
                        }
                    });
                } else {
                    swal.close();
                }
            });
        });

        $(document).ready(function () {
            // Tüm tablo dropdown menüleri başta kapalı
            $('.table-dropdown-menu').hide();

            // Dropdown butonuna tıklama
            $('.table-dropdown-toggle').click(function (e) {
                e.stopPropagation();
                var $dropdownMenu = $(this).siblings('.table-dropdown-menu');

                if ($dropdownMenu.is(':visible')) {
                    $dropdownMenu.hide();
                } else {
                    $('.table-dropdown-menu').hide();
                    var offset = $(this).offset();
                    var dropdownHeight = $dropdownMenu.outerHeight();
                    var windowHeight = $(window).height();
                    var spaceBelow = windowHeight - (offset.top + $(this).outerHeight());

                    if (spaceBelow < dropdownHeight) {
                        // Yukarı aç
                        $dropdownMenu.css({
                            top: offset.top - dropdownHeight,
                            left: offset.left
                        }).show();
                    } else {
                        // Aşağı aç
                        $dropdownMenu.css({
                            top: offset.top + $(this).outerHeight(),
                            left: offset.left
                        }).show();
                    }
                }
            });

            // Sayfa dışına tıklanırsa kapat
            $(document).click(function () {
                $('.table-dropdown-menu').hide();
            });
        });

        function openCreateModal() {
            $.ajax({
                url: '@Url.Action("Create")',
                type: 'GET',
                success: function (result) {
                    $('#createModalContent').html(result);
                    $('#createModal').css('display', 'flex');
                }
            });
        }

        function openUpdateModal(id) {
            $.ajax({
                url: '@Url.Action("Update")/' + id,
                type: 'GET',
                success: function (result) {
                    $('#updateModalContent').html(result);
                    $('#updateModal').css('display', 'flex');
                }
            });
        }

        function openModal(src) {
            var modal = document.getElementById("imageModal");
            var modalImage = document.getElementById("modal-image");
            modal.style.display = "flex";
            modalImage.src = src;
        }

        function closeModal(modalId) {
            $('#' + modalId).css('display', 'none');
        }

        window.onclick = function (event) {
            if (event.target.className === 'modal') {
                event.target.style.display = "none";
            }
        }
    </script>
}

<style>
    /* Tema uyumlu başlık barı */
    .neo-page-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: .75rem;
        padding: 18px 22px;
        margin: 0 20px 18px 20px;
        background: linear-gradient(90deg, rgba(124,58,237,.10), rgba(6,182,212,.10));
        border: 1px solid rgba(2,6,23,.06);
        border-radius: 14px;
        box-shadow: 0 8px 22px rgba(2,6,23,.06)
    }

    .neo-page-title {
        margin: 0;
        font-weight: 700;
        color: #0f172a;
    }

    /* Aksiyon butonu (mevcut .btn-create korunur) */
    .neo-btn-gradient {
        background: linear-gradient(90deg,#06b6d4,#22d3ee);
        color: #fff !important;
        border: none;
        border-radius: 999px;
        font-weight: 600;
        letter-spacing: .2px;
        box-shadow: 0 10px 20px rgba(2,6,23,.18);
        transition: transform .15s ease, box-shadow .15s ease
    }

        .neo-btn-gradient:hover {
            transform: translateY(-1px);
            box-shadow: 0 14px 28px rgba(2,6,23,.20)
        }

    /* Kart */
    .neo-card {
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(2,6,23,.10);
        background: rgba(255,255,255,.9);
        border: 1px solid rgba(2,6,23,.08);
        margin: 0 20px;
        padding: 10px 20px;
    }

    /* Tablo üst başlık gradient */
    .neo-table thead th {
        background: linear-gradient(90deg,#7c3aed,#06b6d4);
        color: #fff;
        border: none !important;
    }

    .neo-table tbody tr:hover {
        background: rgba(124,58,237,.06)
    }

    /* Görsel önizleme */
    .image-preview {
        max-width: 100px;
        max-height: 100px;
        cursor: pointer;
        border-radius: 10px;
        box-shadow: 0 6px 14px rgba(2,6,23,.12);
    }

    .image-placeholder {
        margin: 0;
        color: #64748b;
        font-size: .875rem
    }

    /* Modal */
    .modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: #fff;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
        border-radius: 12px;
        position: relative;
        box-shadow: 0 10px 28px rgba(2,6,23,.18);
    }

    .modal-close {
        position: absolute;
        top: 10px;
        right: 10px;
        color: #000;
        font-size: 30px;
        font-weight: bold;
        transition: .2s;
        cursor: pointer;
    }

        .modal-close:hover {
            color: #999;
        }

    /* Genel arka plan */
    body {
        background: #F5F7FF;
    }

    /* Var olan buton davranışları korunur */
    .btn-delete-direct {
        background-color: #ff7f50;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 999px;
        cursor: pointer;
        transition: background-color .3s ease;
    }

        .btn-delete-direct:hover {
            background-color: #e67350;
        }

    /* DataTables küçük dokunuş */
    .dataTables_wrapper .dataTables_filter input {
        border-radius: 10px;
        border: 1px solid rgba(2,6,23,.15);
        padding: .35rem .6rem
    }

    /* Dropdown konumlandırma aynen korunur */
    .dropdown-menu {
        position: fixed;
        top: 0;
        left: 0;
        transform: translate(0, 0);
        z-index: 1000;
        display: none;
        background-color: #fff;
        min-width: 10rem;
        padding: .5rem 0;
        margin: .125rem 0 0;
        font-size: 1rem;
        color: #212529;
        text-align: left;
        list-style: none;
        background-clip: padding-box;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: .25rem;
        max-height: 300px;
        overflow: auto;
        box-shadow: 0 10px 24px rgba(2,6,23,.12);
    }
</style>
