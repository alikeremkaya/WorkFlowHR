@model WorkFlowHR.UI.Areas.Manager.Models.LeaveVMs.LeaveCreateVM

<!-- Neo modal body -->
<div class="neo-form-card">
    <div class="neo-form-header">
        <div class="neo-dot"></div>
        <div class="neo-dot"></div>
        <div class="neo-dot"></div>
        <span>Create New Leave</span>
    </div>

    <form id="leaveCreateForm" asp-action="Create" method="post" class="neo-form" >
        <div asp-validation-summary="ModelOnly" class="text-danger small mb-3"></div>

        <!-- Start -->
        <div class="mb-3">
            <label asp-for="StartDate" class="form-label neo-label">Start Date</label>
            <input asp-for="StartDate" type="date" class="form-control neo-input" required />
            <span asp-validation-for="StartDate" class="text-danger small"></span>
        </div>

        <!-- End -->
        <div class="mb-3">
            <label asp-for="EndDate" class="form-label neo-label">End Date</label>
            <input asp-for="EndDate" type="date" class="form-control neo-input" required />
            <span asp-validation-for="EndDate" class="text-danger small"></span>
        </div>

        <!-- Leave Type -->
        <div class="mb-3">
            <label asp-for="LeaveTypeId" class="form-label neo-label">Leave Type</label>
            <select asp-for="LeaveTypeId" asp-items="@Model.LeaveTypes" class="form-control neo-input" required>
                <option value="">--- Select ---</option>
            </select>
            <span asp-validation-for="LeaveTypeId" class="text-danger small"></span>
        </div>

        <!-- Employee (ManagerId -> employee seçimi) -->
        <div class="mb-4">
            <label asp-for="ManagerId" class="form-label neo-label">Employee</label>
            <select asp-for="ManagerId" asp-items="@Model.Managers" class="form-control neo-input" required>
                <option value="">--- Select ---</option>
            </select>
            <span asp-validation-for="ManagerId" class="text-danger small"></span>
        </div>

        <div class="d-grid">
            <button type="submit" class="btn neo-btn-gradient">Create</button>
        </div>
    </form>

    <div class="text-center mt-3">
        <a asp-action="Index" class="btn neo-btn-secondary">Back to List</a>
    </div>
</div>

<!-- Inline script: partial AJAX ile yüklense bile çalışır -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    (function bindLeaveCreate(){
        if (window.__leaveCreateBound) return;
        window.__leaveCreateBound = true;

        const $form = $('#leaveCreateForm');
        if (!$form.length) return;

        const $start = $('#StartDate');
        const $end   = $('#EndDate');

        // bugün min
        const today = new Date();
        const toInput = d => new Date(d.getFullYear(), d.getMonth(), d.getDate()).toISOString().split('T')[0];
        const todayStr = toInput(today);
        $start.attr('min', todayStr);
        $end.attr('min', todayStr);

        function validateDates(showMsg = true){
            const s = new Date($start.val());
            const e = new Date($end.val());
            const t = new Date(todayStr);

            // reset
            $start[0].setCustomValidity('');
            $end[0].setCustomValidity('');

            if ($start.val() && s < t){
                if (showMsg){ $start[0].setCustomValidity('Start date cannot be in the past.'); $start[0].reportValidity(); }
                return false;
            }
            if ($start.val() && $end.val() && e <= s){
                if (showMsg){ $end[0].setCustomValidity('End date must be later than start date.'); $end[0].reportValidity(); }
                return false;
            }
            return true;
        }

        // Start değişince End min güncellensin
        $start.on('change', function(){
            const s = $start.val();
            $end.attr('min', s || todayStr);
            validateDates(false);
        });
        $end.on('change', function(){ validateDates(false); });

        // AJAX submit (Index’teki modal akışına uygun)
        $form.on('submit', function(e){
            if (!validateDates(true)) { e.preventDefault(); return false; }

            e.preventDefault();
            $.ajax({
                type: $form.attr('method') || 'POST',
                url:  $form.attr('action'),
                data: $form.serialize(),
                success: function (res) {
                    if (res && res.success) {
                        window.location.href = res.redirectUrl;
                    } else if (res && res.errors) {
                        // sunucudan ModelState hataları
                        for (const key in res.errors) {
                            const $field = $('[name="' + key + '"]');
                            const $span = $field.next('.text-danger');
                            if ($span.length) $span.text(res.errors[key]);
                        }
                    } else {
                        // fallback
                        location.reload();
                    }
                },
                error: function(){
                    alert('An unexpected error occurred.');
                }
            });
            return false;
        });
    })();
</script>

<style>
    /* --- Neo theme (Advance formlarındaki ile uyumlu) --- */
    .neo-form-card {
        background: rgba(255,255,255,.9);
        border: 1px solid rgba(2,6,23,.08);
        border-radius: 16px;
        box-shadow: 0 12px 30px rgba(2,6,23,.12);
        padding: 18px 16px 22px 16px;
    }

    .neo-form-header {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 10px;
        padding: 10px 12px;
        border-radius: 12px;
        background: linear-gradient(90deg, rgba(124,58,237,.10), rgba(6,182,212,.10));
        border: 1px solid rgba(2,6,23,.06);
        font-weight: 700;
        color: #0f172a;
    }

    .neo-dot {
        width: 10px;
        height: 10px;
        border-radius: 999px;
        background: #7c3aed;
        box-shadow: 0 0 0 3px rgba(124,58,237,.15) inset;
    }

    .neo-label {
        font-weight: 600;
        color: #0f172a;
    }

    .neo-input {
        border-radius: 12px;
        border: 1px solid rgba(2,6,23,.15);
        background: rgba(255,255,255,.9);
        transition: box-shadow .2s ease, border-color .2s ease, transform .08s ease;
    }

        .neo-input:focus {
            border-color: #7c3aed;
            box-shadow: 0 0 0 .2rem rgba(124,58,237,.15);
            transform: translateY(-1px);
        }

    .neo-btn-gradient {
        background: linear-gradient(90deg,#06b6d4,#22d3ee);
        color: #fff !important;
        border: none;
        border-radius: 999px;
        font-weight: 600;
        letter-spacing: .2px;
        padding: 10px 18px;
        box-shadow: 0 10px 20px rgba(2,6,23,.18);
        transition: transform .15s ease, box-shadow .15s ease;
    }

        .neo-btn-gradient:hover {
            transform: translateY(-1px);
            box-shadow: 0 14px 28px rgba(2,6,23,.20);
        }

    .neo-btn-secondary {
        background: rgba(2,6,23,.06);
        color: #0f172a;
        border: none;
        border-radius: 999px;
        font-weight: 600;
        padding: 8px 16px;
        transition: background .15s ease, transform .1s ease;
    }

        .neo-btn-secondary:hover {
            background: rgba(2,6,23,.10);
            transform: translateY(-1px);
        }

    .text-danger.small {
        font-size: .85rem;
    }
</style>
