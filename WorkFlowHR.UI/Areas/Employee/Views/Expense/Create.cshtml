@model WorkFlowHR.UI.Areas.Employee.Models.ExpenseVMs.ExpenseCreateVM



@{
    ViewData["Title"] = "Create Expense";
}

<style>
    body {
        background: #eee;
    }

    .custom-page-title {
        color: #4b49ac;
        text-align: center;
        margin-bottom: 30px;
        font-size: 2em;
    }

    .container {
        margin-top: 50px;
    }

    .form-custom {
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        padding: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .control-label {
        font-weight: bold;
        color: #4b49ac;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        font-size: 1em;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .btn {
        text-decoration: none;
        font-weight: bold;
        padding: 10px 20px;
        border-radius: 25px;
        display: inline-block;
        transition: background-color 0.3s ease;
    }

    .btn-primary {
        background-color: #4b49ac;
        border: 1px solid #4b49ac;
        color: white;
    }

    .btn-primary:hover {
        background-color: #4b49ac;
        border: 1px solid #4b49ac;
    }

    .btn-secondary {
        background-color: #6C757D;
        border: 1px solid #6C757D;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5A6369;
        border: 1px solid #5A6369;
    }
</style>

<form id="expenseCreateForm" asp-action="Create" method="post" enctype="multipart/form-data" class="form-custom">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="NewImage" class="control-label">New Image</label>
        <input asp-for="NewImage" type="file" class="form-control" required />
        <span asp-validation-for="NewImage" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Amount" class="control-label">Amount</label>
        <input asp-for="Amount" class="form-control" required />
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ExpenseDate" class="control-label">Expense Date</label>
        <input id="ExpenseDate" asp-for="ExpenseDate" type="date" class="form-control" required />
        <span asp-validation-for="ExpenseDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label">Description</label>
        <textarea asp-for="Description" class="form-control" required></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <input asp-for="ManagerId" type="hidden" />
    <input asp-for="ManagerFirstName" type="hidden" />
    <input asp-for="ManagerLastName" type="hidden" />

    <div class="form-group text-center">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div class="container mt-3 text-center">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    $(document).ready(function () {
        $('#expenseCreateForm').validate({
            errorClass: 'text-danger',
            validClass: 'text-success',
            errorPlacement: function (error, element) {
                error.insertAfter(element);
            },
            messages: {
                NewImage: "Lütfen bu alanı doldurun.",
                Amount: "Lütfen bu alanı doldurun.",
                ExpenseDate: "Lütfen bu alanı doldurun.",
                Description: "Lütfen bu alanı doldurun."
            },
            submitHandler: function (form) {
                $.ajax({
                    type: $(form).attr('method'),
                    url: $(form).attr('action'),
                    data: new FormData(form),
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success) {
                            window.location.href = response.redirectUrl;
                        } else {
                            $.each(response.errors, function (key, value) {
                                var errorElement = $('[name="' + key + '"]').next('.text-danger');
                                errorElement.text(value);
                            });
                        }
                    }
                });
                return false; // prevent normal form submission
            }
        });
    });
</script>

<script>
    document.getElementById('expenseCreateForm').addEventListener('submit', function (event) {
        var expenseDate = new Date(document.getElementById('ExpenseDate').value);
        var now = new Date();

        // Prevent past date
        if (expenseDate < new Date(now.getFullYear(), now.getMonth(), now.getDate())) {
            var expenseDateInput = document.getElementById('ExpenseDate');
            expenseDateInput.setCustomValidity('Expense date must be later than the current date.');
            expenseDateInput.reportValidity();
            event.preventDefault();
            return;
        }
    });

    document.getElementById('ExpenseDate').addEventListener('change', function () {
        var expenseDateInput = document.getElementById('ExpenseDate');
        expenseDateInput.setCustomValidity('');
    });
</script>
